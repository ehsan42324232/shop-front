import { Component, Input } from '@angular/core';\n\nexport interface StockInfo {\n  available: number;\n  reserved: number;\n  total: number;\n  lowStockThreshold: number;\n}\n\n@Component({\n  selector: 'app-stock-warning',\n  template: `\n    <div class=\"stock-warning-container\" *ngIf=\"shouldShowWarning()\">\n      <!-- Critical Stock Warning -->\n      <div class=\"warning-alert critical\" *ngIf=\"stockInfo.available === 1\">\n        <div class=\"alert-icon\">\n          <i class=\"fas fa-exclamation-triangle\"></i>\n        </div>\n        <div class=\"alert-content\">\n          <h4 class=\"alert-title\">هشدار موجودی بحرانی!</h4>\n          <p class=\"alert-message\">\n            تنها <strong>یک عدد</strong> از این محصول باقی مانده است.\n            برای خرید عجله کنید!\n          </p>\n        </div>\n        <div class=\"alert-action\" *ngIf=\"showQuickBuy\">\n          <button class=\"quick-buy-btn\" (click)=\"onQuickBuy()\">\n            <i class=\"fas fa-bolt\"></i>\n            خرید سریع\n          </button>\n        </div>\n      </div>\n\n      <!-- Low Stock Warning -->\n      <div class=\"warning-alert low\" *ngIf=\"stockInfo.available > 1 && stockInfo.available <= stockInfo.lowStockThreshold\">\n        <div class=\"alert-icon\">\n          <i class=\"fas fa-exclamation-circle\"></i>\n        </div>\n        <div class=\"alert-content\">\n          <h4 class=\"alert-title\">موجودی کم!</h4>\n          <p class=\"alert-message\">\n            تنها <strong>{{stockInfo.available}} عدد</strong> از این محصول موجود است.\n          </p>\n        </div>\n      </div>\n\n      <!-- Stock Level Indicator -->\n      <div class=\"stock-indicator\" *ngIf=\"showStockIndicator\">\n        <div class=\"stock-bar\">\n          <div class=\"stock-level\" [style.width.%]=\"getStockPercentage()\"></div>\n        </div>\n        <div class=\"stock-info\">\n          <span class=\"available-count\">{{stockInfo.available}} عدد موجود</span>\n          <span class=\"total-count\" *ngIf=\"showTotalStock\">از {{stockInfo.total}} عدد</span>\n        </div>\n      </div>\n\n      <!-- Reserved Stock Info -->\n      <div class=\"reserved-info\" *ngIf=\"stockInfo.reserved > 0 && showReservedInfo\">\n        <i class=\"fas fa-clock\"></i>\n        <span>{{stockInfo.reserved}} عدد در انتظار پرداخت</span>\n      </div>\n\n      <!-- Customer Actions -->\n      <div class=\"customer-actions\" *ngIf=\"showCustomerActions && stockInfo.available > 0\">\n        <div class=\"notify-section\" *ngIf=\"stockInfo.available <= 3\">\n          <button class=\"notify-btn\" (click)=\"onNotifyWhenAvailable()\">\n            <i class=\"fas fa-bell\"></i>\n            اطلاع از موجود شدن\n          </button>\n        </div>\n        \n        <div class=\"wishlist-section\" *ngIf=\"showWishlist\">\n          <button class=\"wishlist-btn\" (click)=\"onAddToWishlist()\" [class.active]=\"isInWishlist\">\n            <i class=\"fas fa-heart\" *ngIf=\"isInWishlist\"></i>\n            <i class=\"far fa-heart\" *ngIf=\"!isInWishlist\"></i>\n            {{isInWishlist ? 'در علاقه‌مندی‌ها' : 'افزودن به علاقه‌مندی‌ها'}}\n          </button>\n        </div>\n      </div>\n\n      <!-- Out of Stock -->\n      <div class=\"out-of-stock-alert\" *ngIf=\"stockInfo.available === 0\">\n        <div class=\"alert-icon\">\n          <i class=\"fas fa-times-circle\"></i>\n        </div>\n        <div class=\"alert-content\">\n          <h4 class=\"alert-title\">ناموجود</h4>\n          <p class=\"alert-message\">\n            این محصول در حال حاضر موجود نیست.\n          </p>\n        </div>\n        <div class=\"alert-action\">\n          <button class=\"notify-btn\" (click)=\"onNotifyWhenAvailable()\">\n            <i class=\"fas fa-bell\"></i>\n            اطلاع از موجود شدن\n          </button>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./stock-warning.component.scss']\n})\nexport class StockWarningComponent {\n  @Input() stockInfo!: StockInfo;\n  @Input() showQuickBuy: boolean = true;\n  @Input() showStockIndicator: boolean = true;\n  @Input() showTotalStock: boolean = false;\n  @Input() showReservedInfo: boolean = true;\n  @Input() showCustomerActions: boolean = true;\n  @Input() showWishlist: boolean = true;\n  @Input() isInWishlist: boolean = false;\n  @Input() productId?: string;\n  @Input() productName?: string;\n\n  /**\n   * Check if warning should be shown\n   */\n  shouldShowWarning(): boolean {\n    if (!this.stockInfo) return false;\n    \n    return (\n      this.stockInfo.available <= this.stockInfo.lowStockThreshold ||\n      this.stockInfo.available === 0\n    );\n  }\n\n  /**\n   * Get stock percentage for indicator bar\n   */\n  getStockPercentage(): number {\n    if (!this.stockInfo || this.stockInfo.total === 0) return 0;\n    \n    const percentage = (this.stockInfo.available / this.stockInfo.total) * 100;\n    return Math.max(5, Math.min(100, percentage)); // Minimum 5% for visibility\n  }\n\n  /**\n   * Get stock level class for styling\n   */\n  getStockLevelClass(): string {\n    const percentage = this.getStockPercentage();\n    \n    if (percentage <= 10) return 'critical';\n    if (percentage <= 30) return 'low';\n    if (percentage <= 60) return 'medium';\n    return 'good';\n  }\n\n  /**\n   * Handle quick buy action\n   */\n  onQuickBuy(): void {\n    // Emit event or call service\n    console.log('Quick buy triggered for product:', this.productId);\n    // Could emit an event: this.quickBuy.emit(this.productId);\n  }\n\n  /**\n   * Handle notify when available\n   */\n  onNotifyWhenAvailable(): void {\n    // Emit event or call notification service\n    console.log('Notify when available for product:', this.productId);\n    // Could emit an event: this.notifyWhenAvailable.emit(this.productId);\n  }\n\n  /**\n   * Handle add to wishlist\n   */\n  onAddToWishlist(): void {\n    // Emit event or call wishlist service\n    console.log('Add to wishlist:', this.productId);\n    // Could emit an event: this.wishlistToggle.emit(this.productId);\n  }\n\n  /**\n   * Get urgency message based on stock level\n   */\n  getUrgencyMessage(): string {\n    if (this.stockInfo.available === 0) {\n      return 'ناموجود';\n    } else if (this.stockInfo.available === 1) {\n      return 'آخرین موجودی!';\n    } else if (this.stockInfo.available <= 3) {\n      return `تنها ${this.stockInfo.available} عدد باقیمانده!`;\n    } else if (this.stockInfo.available <= this.stockInfo.lowStockThreshold) {\n      return 'موجودی کم';\n    }\n    return 'موجود';\n  }\n\n  /**\n   * Check if stock is critical (1 item left)\n   */\n  isCriticalStock(): boolean {\n    return this.stockInfo?.available === 1;\n  }\n\n  /**\n   * Check if stock is low\n   */\n  isLowStock(): boolean {\n    return this.stockInfo?.available > 1 && \n           this.stockInfo?.available <= this.stockInfo?.lowStockThreshold;\n  }\n\n  /**\n   * Check if out of stock\n   */\n  isOutOfStock(): boolean {\n    return this.stockInfo?.available === 0;\n  }\n}\n