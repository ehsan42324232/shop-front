import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { SocialContentService } from '../../services/social-content.service';\n\nexport interface SocialMediaContent {\n  id: string;\n  type: 'image' | 'video' | 'text';\n  content: string;\n  description?: string;\n  source: 'instagram' | 'telegram';\n  timestamp: Date;\n  selected: boolean;\n}\n\n@Component({\n  selector: 'app-social-media-import',\n  template: `\n    <div class=\"social-media-import\">\n      <!-- Header -->\n      <div class=\"import-header\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-4\">\n          <i class=\"fas fa-share-alt ml-2\"></i>\n          واردات از شبکه‌های اجتماعی\n        </h3>\n        <p class=\"text-gray-600 mb-6\">\n          آخرین محتواهای شما از اینستاگرام و تلگرام را برای استفاده در محصول انتخاب کنید\n        </p>\n      </div>\n\n      <!-- Social Platform Buttons -->\n      <div class=\"platform-buttons grid grid-cols-2 gap-4 mb-6\">\n        <button \n          (click)=\"loadSocialContent('instagram')\"\n          [disabled]=\"loading\"\n          class=\"platform-btn instagram-btn\">\n          <i class=\"fab fa-instagram\"></i>\n          <span>واردات از اینستاگرام</span>\n          <div class=\"loader\" *ngIf=\"loading && currentPlatform === 'instagram'\">\n            <i class=\"fas fa-spinner fa-spin\"></i>\n          </div>\n        </button>\n        \n        <button \n          (click)=\"loadSocialContent('telegram')\"\n          [disabled]=\"loading\"\n          class=\"platform-btn telegram-btn\">\n          <i class=\"fab fa-telegram\"></i>\n          <span>واردات از تلگرام</span>\n          <div class=\"loader\" *ngIf=\"loading && currentPlatform === 'telegram'\">\n            <i class=\"fas fa-spinner fa-spin\"></i>\n          </div>\n        </button>\n      </div>\n\n      <!-- Content Display -->\n      <div class=\"content-display\" *ngIf=\"socialContent.length > 0\">\n        <div class=\"content-header flex justify-between items-center mb-4\">\n          <h4 class=\"text-lg font-semibold\">آخرین محتواها ({{socialContent.length}} مورد)</h4>\n          <div class=\"actions\">\n            <button \n              (click)=\"selectAll()\"\n              class=\"btn btn-sm btn-outline\">\n              انتخاب همه\n            </button>\n            <button \n              (click)=\"clearSelection()\"\n              class=\"btn btn-sm btn-outline ml-2\">\n              پاک کردن انتخاب\n            </button>\n          </div>\n        </div>\n\n        <!-- Content Grid -->\n        <div class=\"content-grid grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          <div \n            *ngFor=\"let item of socialContent\" \n            class=\"content-item\"\n            [class.selected]=\"item.selected\"\n            (click)=\"toggleSelection(item)\">\n            \n            <!-- Image Content -->\n            <div *ngIf=\"item.type === 'image'\" class=\"image-content\">\n              <img [src]=\"item.content\" [alt]=\"item.description || 'تصویر'\" class=\"content-preview\">\n              <div class=\"content-overlay\">\n                <i class=\"fas fa-image\"></i>\n                <span>{{item.source}}</span>\n              </div>\n            </div>\n\n            <!-- Video Content -->\n            <div *ngIf=\"item.type === 'video'\" class=\"video-content\">\n              <video [src]=\"item.content\" class=\"content-preview\" controls>\n                متأسفانه مرورگر شما از ویدیو پشتیبانی نمی‌کند.\n              </video>\n              <div class=\"content-overlay\">\n                <i class=\"fas fa-video\"></i>\n                <span>{{item.source}}</span>\n              </div>\n            </div>\n\n            <!-- Text Content -->\n            <div *ngIf=\"item.type === 'text'\" class=\"text-content\">\n              <div class=\"content-preview text-preview\">\n                <p>{{item.content | slice:0:200}}{{item.content.length > 200 ? '...' : ''}}</p>\n              </div>\n              <div class=\"content-overlay\">\n                <i class=\"fas fa-file-text\"></i>\n                <span>{{item.source}}</span>\n              </div>\n            </div>\n\n            <!-- Selection Indicator -->\n            <div class=\"selection-indicator\" *ngIf=\"item.selected\">\n              <i class=\"fas fa-check-circle\"></i>\n            </div>\n\n            <!-- Content Info -->\n            <div class=\"content-info\">\n              <div class=\"timestamp\">\n                <i class=\"fas fa-clock\"></i>\n                {{item.timestamp | date:'short':'fa'}}\n              </div>\n              <div class=\"description\" *ngIf=\"item.description\">\n                {{item.description | slice:0:50}}{{item.description.length > 50 ? '...' : ''}}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Empty State -->\n      <div class=\"empty-state\" *ngIf=\"!loading && socialContent.length === 0\">\n        <div class=\"empty-content text-center py-8\">\n          <i class=\"fas fa-share-alt text-4xl text-gray-400 mb-4\"></i>\n          <h4 class=\"text-lg font-semibold text-gray-600 mb-2\">هنوز محتوایی بارگذاری نشده</h4>\n          <p class=\"text-gray-500\">برای شروع، یکی از شبکه‌های اجتماعی را انتخاب کنید</p>\n        </div>\n      </div>\n\n      <!-- Loading State -->\n      <div class=\"loading-state\" *ngIf=\"loading\">\n        <div class=\"loading-content text-center py-8\">\n          <div class=\"loader-spinner\">\n            <i class=\"fas fa-spinner fa-spin text-3xl text-blue-500 mb-4\"></i>\n          </div>\n          <h4 class=\"text-lg font-semibold text-gray-600 mb-2\">در حال بارگذاری محتوا...</h4>\n          <p class=\"text-gray-500\">لطفاً صبر کنید</p>\n        </div>\n      </div>\n\n      <!-- Action Buttons -->\n      <div class=\"action-buttons mt-6\" *ngIf=\"socialContent.length > 0\">\n        <div class=\"flex justify-end gap-3\">\n          <button \n            (click)=\"cancelImport()\"\n            class=\"btn btn-secondary\">\n            انصراف\n          </button>\n          <button \n            (click)=\"confirmImport()\"\n            [disabled]=\"getSelectedContent().length === 0\"\n            class=\"btn btn-primary\">\n            <i class=\"fas fa-check ml-2\"></i>\n            استفاده از موارد انتخابی ({{getSelectedContent().length}})\n          </button>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./social-media-import.component.scss']\n})\nexport class SocialMediaImportComponent {\n  @Input() showModal: boolean = false;\n  @Output() contentSelected = new EventEmitter<SocialMediaContent[]>();\n  @Output() modalClosed = new EventEmitter<void>();\n\n  socialContent: SocialMediaContent[] = [];\n  loading: boolean = false;\n  currentPlatform: 'instagram' | 'telegram' | null = null;\n\n  constructor(private socialContentService: SocialContentService) {}\n\n  /**\n   * Load content from social media platform\n   */\n  async loadSocialContent(platform: 'instagram' | 'telegram'): Promise<void> {\n    this.loading = true;\n    this.currentPlatform = platform;\n    this.socialContent = [];\n\n    try {\n      const content = await this.socialContentService.getLatestContent(platform, 5);\n      this.socialContent = content.map(item => ({ ...item, selected: false }));\n    } catch (error) {\n      console.error(`Error loading ${platform} content:`, error);\n      // Show error message to user\n    } finally {\n      this.loading = false;\n      this.currentPlatform = null;\n    }\n  }\n\n  /**\n   * Toggle selection of content item\n   */\n  toggleSelection(item: SocialMediaContent): void {\n    item.selected = !item.selected;\n  }\n\n  /**\n   * Select all content items\n   */\n  selectAll(): void {\n    this.socialContent.forEach(item => item.selected = true);\n  }\n\n  /**\n   * Clear all selections\n   */\n  clearSelection(): void {\n    this.socialContent.forEach(item => item.selected = false);\n  }\n\n  /**\n   * Get selected content items\n   */\n  getSelectedContent(): SocialMediaContent[] {\n    return this.socialContent.filter(item => item.selected);\n  }\n\n  /**\n   * Confirm import of selected content\n   */\n  confirmImport(): void {\n    const selectedContent = this.getSelectedContent();\n    if (selectedContent.length > 0) {\n      this.contentSelected.emit(selectedContent);\n      this.closeModal();\n    }\n  }\n\n  /**\n   * Cancel import and close modal\n   */\n  cancelImport(): void {\n    this.closeModal();\n  }\n\n  /**\n   * Close modal and reset state\n   */\n  private closeModal(): void {\n    this.socialContent = [];\n    this.loading = false;\n    this.currentPlatform = null;\n    this.modalClosed.emit();\n  }\n}\n